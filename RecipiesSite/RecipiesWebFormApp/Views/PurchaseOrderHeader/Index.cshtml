@using InventoryManagementMVC.Extensions
@using InventoryManagementMVC.Models.Purchasing;
@using InventoryManagementMVC.Models;


@model IEnumerable<PurchaseOrderHeaderViewModel>

@(
 Html.Kendo().Grid(Model)
     .Name("PurchaseOrderHeaderViewModelGrid")
            .AddDefaultOptions()
            .Columns(columns =>
            {
                columns.Bound(p => p.PurchaseOrderHeaderId).Title("Download").ClientTemplate(
      "<a href='" +
                  Url.Action("Download", "PurchaseOrderHeader", new { purchaseOrderHeaderId = "#=PurchaseOrderHeaderId#" }) +
              "'" +
      ">Download</a>");
                columns.Bound(p => p.PurchaseOrderHeaderId).Title("SendEmail").ClientTemplate(
  "<a href='" +
              Url.Action("SendEmail", "PurchaseOrderHeader", new { purchaseOrderHeaderId = "#=PurchaseOrderHeaderId#" }) +
          "'" +
  ">Send Email</a>"
);
            })
        //.Columns(columns => columns.Command(c => c.Custom("Download").Text("Download").Action("Download", "PurchaseOrderHeader", new {purchaseOrderHeaderId = "#=PurchaseOrderHeaderId#"}).SendDataKeys.SendState(true)))
            .DataSource(dataSource => dataSource
                .Ajax()
                .Read("Read", "PurchaseOrderHeader")
                .Create("Create", "PurchaseOrderHeader")
                .Update("Update", "PurchaseOrderHeader")
                .Destroy("Destroy", "PurchaseOrderHeader")

            ).ClientDetailTemplateId("template")

            //Html.Kendo().MobileButton()
            //    .Name("updateTotals")
            //    .
   
)
@(
 Html.ActionLink("CorrectTotals", "CorrectTotals")
)

<script id="template" type="text/kendo-tmpl">
    @(Html.Kendo().Grid<PurchaseOrderDetailViewModel>()
                                          .Name("PurchaseOrderDetailViewModelGrid_#=PurchaseOrderHeaderId#")
                   .AddDefaultOptions(true, false)
            //.Events(e => e.Edit("podEdit"))
            // .ToolBar(t => t.Create())
          .DataSource(dataSource => dataSource
              .Ajax()
              .Batch(true)
              .PageSize(5)
              .Model(m => m.Id(p => p.PurchaseOrderDetailId))
                                                      .Read(read => read.Action("ReadDetail", "PurchaseOrderHeader", new { purchaseOrderHeaderId = "#=PurchaseOrderHeaderId#" }))
                                                      .Create("CreateDetail", "PurchaseOrderHeader", new { purchaseOrderHeaderId = "#=PurchaseOrderHeaderId#" })
                                      .Update("UpdateDetail", "PurchaseOrderHeader")
                              .Destroy("DestroyDetail", "PurchaseOrderHeader")
          )
          .ToClientTemplate()
    )
</script>


<script>
    function podEdit(e) {
        debugger;
        //execute your custom logic to get the max value
        var maxValue = 5;

        //check if record is new
        if (e.model.isNew()) {

            //set the required field value
            e.model.set("UnitPrice", 222222222);
        }
        else {
            //set the required field value
            e.model.set("UnitPrice", 1111111);
        }
    }
</script>

<script>
    function ddlChange(e, e2, e3) {
        debugger;

        //$("")

    }
</script>